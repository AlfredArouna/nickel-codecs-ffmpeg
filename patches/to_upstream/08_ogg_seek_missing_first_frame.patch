diff -rpu -N unpatched-ffmpeg-mt/libavformat/oggdec.c patched-ffmpeg-mt/libavformat/oggdec.c
--- unpatched-ffmpeg-mt/libavformat/oggdec.c	2010-03-22 20:07:02 -0700
+++ patched-ffmpeg-mt/libavformat/oggdec.c	2010-03-22 20:08:04 -0700
@@ -210,7 +210,7 @@ ogg_new_buf(struct ogg *ogg, int idx)
 }
 
 static int
-ogg_read_page (AVFormatContext * s, int *str)
+ogg_read_page (AVFormatContext * s, int *str, int64_t *offset)
 {
     ByteIOContext *bc = s->pb;
     struct ogg *ogg = s->priv_data;
@@ -224,6 +224,7 @@ ogg_read_page (AVFormatContext * s, int 
     int size, idx;
     uint8_t sync[4];
     int sp = 0;
+    int64_t poffset = url_ftell(bc);
 
     if (get_buffer (bc, sync, 4) < 4)
         return -1;
@@ -308,18 +309,22 @@ ogg_read_page (AVFormatContext * s, int 
 
     if (str)
         *str = idx;
+    if (offset)
+        *offset = poffset;
 
     return 0;
 }
 
 static int
-ogg_packet (AVFormatContext * s, int *str, int *dstart, int *dsize)
+ogg_packet (AVFormatContext * s, int *str, int *dstart, int *dsize, int64_t* offset)
 {
     struct ogg *ogg = s->priv_data;
     int idx, i;
     struct ogg_stream *os;
     int complete = 0;
     int segp = 0, psize = 0;
+    int64_t poffset;
+    int pnum = 0;
 
 #if 0
     av_log (s, AV_LOG_DEBUG, "ogg_packet: curidx=%i\n", ogg->curidx);
@@ -329,10 +334,13 @@ ogg_packet (AVFormatContext * s, int *st
         idx = ogg->curidx;
 
         while (idx < 0){
-            if (ogg_read_page (s, &idx) < 0)
+            if (ogg_read_page (s, &idx, &poffset) < 0)
                 return -1;
         }
 
+        if (pnum++ == 0 && offset)
+            *offset = poffset;
+
         os = ogg->streams + idx;
 
 #if 0
@@ -428,12 +436,15 @@ static int
 ogg_get_headers (AVFormatContext * s)
 {
     struct ogg *ogg = s->priv_data;
+    int64_t pos = 0;
 
     do{
-        if (ogg_packet (s, NULL, NULL, NULL) < 0)
+        if (ogg_packet (s, NULL, NULL, NULL, &pos) < 0)
             return -1;
     }while (!ogg->headers);
 
+    s->data_offset = pos;
+
 #if 0
     av_log (s, AV_LOG_DEBUG, "found headers\n");
 #endif
@@ -482,7 +493,7 @@ ogg_get_length (AVFormatContext * s)
     ogg_save (s);
     url_fseek (s->pb, end, SEEK_SET);
 
-    while (!ogg_read_page (s, &i)){
+    while (!ogg_read_page (s, &i, NULL)){
         if (ogg->streams[i].granule != -1 && ogg->streams[i].granule != 0 &&
             ogg->streams[i].codec)
             idx = i;
@@ -533,7 +544,7 @@ ogg_read_packet (AVFormatContext * s, AV
 
     //Get an ogg packet
     do{
-        if (ogg_packet (s, &idx, &pstart, &psize) < 0)
+        if (ogg_packet (s, &idx, &pstart, &psize, NULL) < 0)
             return AVERROR(EIO);
     }while (idx < 0 || !s->streams[idx]);
 
@@ -595,14 +606,17 @@ ogg_read_timestamp (AVFormatContext * s,
     ByteIOContext *bc = s->pb;
     int64_t pts = AV_NOPTS_VALUE;
     int i;
+    int64_t fpoffset = AV_NOPTS_VALUE;
+    int64_t poffset;
     url_fseek(bc, *pos_arg, SEEK_SET);
-    while (url_ftell(bc) < pos_limit && !ogg_read_page (s, &i)) {
+    while (url_ftell(bc) < pos_limit && !ogg_read_page (s, &i, &poffset)) {
+        if (fpoffset == AV_NOPTS_VALUE && i == stream_index)
+           fpoffset = poffset;
         if (ogg->streams[i].granule != -1 && ogg->streams[i].granule != 0 &&
             ogg->streams[i].codec && i == stream_index) {
             pts = ogg_gptopts(s, i, ogg->streams[i].granule, NULL);
-            // FIXME: this is the position of the packet after the one with above
-            // pts.
-            *pos_arg = url_ftell(bc);
+            *pos_arg = fpoffset;
+            url_fseek(bc, fpoffset, SEEK_SET);
             break;
         }
     }
